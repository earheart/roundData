DROP TRIGGER IF EXISTS RECOVER_ACCOUNT_ARCHIVED; 
CREATE TRIGGER RECOVER_ACCOUNT_ARCHIVED BEFORE UPDATE ON `ACCOUNTX`
     FOR EACH ROW 
     BEGIN
     -- DECLARE @TABLE_NAME VARCHAR(255);
     IF NEW.RC_BIOS__RECOVER_FLAG ='True'
     THEN
        UPDATE CAMPAIGNMEMBER      SET DELETE_FLAG = 'R' WHERE ACCOUNTID        = NEW.ID;
        UPDATE CASEX               SET DELETE_FLAG = 'R' WHERE ACCOUNTID        = NEW.ID;
        UPDATE TASK                SET DELETE_FLAG = 'R' WHERE ACCOUNTID        = NEW.ID;
        UPDATE RC_BIOS__PREFERENCE SET DELETE_FLAG = 'R' WHERE RC_BIOS__ACCOUNT = NEW.ID;
        UPDATE OPPORTUNITY         SET DELETE_FLAG = 'R' WHERE ACCOUNTID        = NEW.ID;
        UPDATE OPPORTUNITYLINEITEM 
          JOIN OPPORTUNITY ON OPPORTUNITY.ID = OPPORTUNITYLINEITEM.OPPORTUNITYID
           SET OPPORTUNITYLINEITEM.DELETE_FLAG = 'R' 
          WHERE OPPORTUNITY.ACCOUNTID = NEW.ID;
        UPDATE RC_GIVING__PAYMENT_METHOD 
           SET RC_GIVING__PAYMENT_METHOD.DELETE_FLAG = 'R' 
          WHERE RC_GIVING__PAYMENT_METHOD.RC_GIVING__ACCOUNT = NEW.ID;
        UPDATE RC_GIVING__DELIVERABLE
          JOIN OPPORTUNITY ON OPPORTUNITY.ID = RC_GIVING__DELIVERABLE.RG_GIVING__GRANT
           SET RC_GIVING__DELIVERABLE.DELETE_FLAG = 'R' 
          WHERE RC_GIVING__DELIVERABLE.RC_GIVING__ACCOUNT = NEW.ID;
          -- THIS SHOULD NOT BE REQUIRED WHEN USING THE RJ RECOVERY FUNCTIONALITY, HOWEVER THIS DOES ASSUME RJ
--             SET @TABLE_NAME = (SELECT GET_TABLE_NAME('rc_giving__opportunity_allocation__c'));
--         UPDATE @TABLE_NAME
--           JOIN OPPORTUNITY ON OPPORTUNITY.ID = @TABLE_NAME.RC_GIVING__OPPORTUNITY
--           SET @TABLE_NAME.DELETE_FLAG = 'R' 
--           WHERE OPPORTUNITY.ACCOUNTID = NEW.ID;
--             SET @TABLE_NAME = (SELECT GET_TABLE_NAME('rc_giving__opportunity_credit__c'));
--         UPDATE @TABLE_NAME
--           JOIN OPPORTUNITY ON OPPORTUNITY.ID = @TABLE_NAME.RC_GIVING__OPPORTUNITY
--           SET @TABLE_NAME.DELETE_FLAG = 'R' 
--           WHERE OPPORTUNITY.ACCOUNTID = NEW.ID;
         UPDATE ACCOUNTX SET RC_BIOS__RECOVER__FLAG = 'False' WHERE ID        = NEW.ID;           
     END IF; 
     END