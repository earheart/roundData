DROP PROCEDURE IF EXISTS CREATE_UNIVERSE_ACCOUNT_CONTACT;
CREATE PROCEDURE CREATE_UNIVERSE_ACCOUNT_CONTACT()
BEGIN 

SET @FIELD_LIST = (select 
    group_concat(concat(
       CASE WHEN TABLE_NAME = 'RC_BIOS__ACCOUNT_ADDRESS' THEN 'S_PREFERRED_ADDRESS_BILLING' 
            WHEN TABLE_NAME = 'CONTACT' AND RIGHT(UNIVERSE_FIELD_NAME,8) = '_Primary' THEN 'CONTACT_PRIMARY'
            WHEN TABLE_NAME = 'CONTACT' AND RIGHT(UNIVERSE_FIELD_NAME,10) = '_Secondary' THEN 'CONTACT_SECONDARY'
            WHEN TABLE_NAME = 'ACCOUNTX' THEN 'V_ACCOUNT'
            WHEN TABLE_NAME = 'ACCOUNT' THEN 'V_ACCOUNT'
          ELSE TABLE_NAME
        END
        , 
        '.', COLUMN_NAME, ' as ', ifnull(UNIVERSE_FIELD_NAME_OVERRIDE, UNIVERSE_FIELD_NAME)))
from RD_UNIDEF_ACCOUNTCONTACT
where included = 'True'
and UNIVERSE_name = 'U_ACCOUNT_CONTACT'
order by RD_UNIDEF_ACCOUNTCONTACT.orderby, record_number
);

SET @1 ='create or replace VIEW U_ACCOUNT_CONTACT as select ';
SET @2 = left(@FIELD_LIST, char_length(@FIELD_LIST) - 1);
SET @3 =' FROM V_ACCOUNT LEFT JOIN V_CONTACT AS CONTACT_PRIMARY ON CONTACT_PRIMARY.ID = CONTACT_PRIMARY_GUID(V_ACCOUNT.ID)LEFT JOIN V_CONTACT AS CONTACT_SECONDARY ON CONTACT_SECONDARY.ID = CONTACT_SECONDARY_GUID(V_ACCOUNT.ID)LEFT JOIN S_PREFERRED_ADDRESS_BILLING ON S_preferred_address_Billing.rc_bios__account = v_account.id;';
SET @UNIVERSE_DEF = (SELECT CONCAT(@1, @2, @3) AS UNIVERSE_DEF);

PREPARE UNIVERSE_DEF_STMT FROM @UNIVERSE_DEF;

EXECUTE UNIVERSE_DEF_STMT;

DEALLOCATE PREPARE UNIVERSE_DEF_STMT;

END;
